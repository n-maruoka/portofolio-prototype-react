{"version":3,"sources":["components/Ranking.js","components/Ranking-dummy.js","App.js","reducers/index.js","index.js","createStore.js"],"names":["Ranking","categoryId","defaultProps","RankingDummy","React","Component","LoginButton","props","onClick","LogoutButton","AccordionOpen","AccordionClose","App","handleLoginClick","bind","handleLogoutClick","handleAccordionOpen","handleAccordionClose","state","count","isLoggedIn","isAccordionOpen","console","log","this","setState","buttonLogInOut","accBtn","acc","open","Fragment","handleClick","isLoggIn","className","to","exact","path","component","render","match","params","id","noop","history","createBrowserHistory","store","reduxCreateStore","combineReducers","reducers","router","connectRouter","applyMiddleware","logger","routerMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e058c72c.chunk.js","sourcesContent":["// src/components/Ranking.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Ranking({ categoryId }) {\n  // 最終的にはcategoryIdを元にAPIから情報を取得したい\n  return (\n    <div>\n      <h2>Rankingコンポーネント</h2>\n      <p>カテゴリーID: {categoryId}</p>\n    </div>\n  )\n}\nRanking.propTypes = {\n  categoryId: PropTypes.string\n};\nRanking.defaultProps = {\n  // categoryId=1は総合ランキング\n  categoryId: '1'\n};\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nclass RankingDummy extends React.Component{\n  render() {\n    return (\n      <div>\n        <h2>Rankingコンポーネント</h2>\n        <p>カテゴリーID: dummy</p>\n      </div>\n    )\n  };\n}\n\nexport default RankingDummy;\n","import React, {Component} from 'react';\nimport { BrowserRouter, Route, Link, Switch, Redirect } from 'react-router-dom';\nimport Ranking from './components/Ranking';\nimport RankingDummy from './components/Ranking-dummy';\nimport './App.css';\n\n\n// class NotFound extends Component {\n//   render() {\n//     return <h2>コンテンツなし</h2>;\n//   }\n// }\n\nfunction LoginButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Login\n    </button>\n  );\n}\n\nfunction LogoutButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Logout\n    </button>\n  );\n}\n\nfunction AccordionOpen(props) {\n  return (\n    <button onClick={props.onClick}>\n      Open\n    </button>\n  );\n}\n\nfunction AccordionClose(props) {\n  return (\n    <button onClick={props.onClick}>\n      Close\n    </button>\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n    this.handleAccordionOpen = this.handleAccordionOpen.bind(this);\n    this.handleAccordionClose = this.handleAccordionClose.bind(this);\n    this.state = {\n      count: 0, \n      isLoggedIn: false,\n      isAccordionOpen: false,\n    };\n  }\n  \n  /* counter */\n  handleClick(){\n    console.log('handleClick');\n    this.setState({count: this.state.count + 1});\n  }\n  \n  /* Login btn */\n  handleLoginClick() {\n    this.setState({isLoggedIn: true});\n  }\n\n  handleLogoutClick() {\n    this.setState({isLoggedIn: false});\n  }\n  \n  /* Accordion btn */\n  handleAccordionOpen() {\n    this.setState({isAccordionOpen: true});\n  }\n\n  handleAccordionClose() {\n    this.setState({isAccordionOpen: false});\n  }\n  \n  render() {\n    const isLoggedIn = this.state.isLoggedIn;\n    let buttonLogInOut;\n    if (isLoggedIn) {\n      buttonLogInOut = <LogoutButton onClick={this.handleLogoutClick} />;\n    } else {\n      buttonLogInOut = <LoginButton onClick={this.handleLoginClick} />;\n    }\n\n    const isAccordionOpen = this.state.isAccordionOpen;\n    let accBtn, acc;\n    if (isAccordionOpen) {\n      accBtn = <AccordionClose onClick={this.handleAccordionClose} />;\n      acc = <details open><summary>HTMLって何の略？</summary><p>「Hyper Text Markup Language」の略です。</p></details>;\n    } else {\n      // accBtn = <AccordionOpen onClick={this.handleAccordionOpen} />;\n      accBtn = <AccordionOpen onClick={this.handleAccordionOpen} />;\n      acc = <details><summary>HTMLって何の略？</summary><p>最初は閉じていますよ</p></details>;\n    }   \n\n    return (\n      <React.Fragment>\n        <div>\n          <h1>\n            {this.state.count}\n          </h1>\n          <button onClick={()=>{this.handleClick()}}>+</button>\n        </div>\n\n        <div>\n          <p></p>\n          {buttonLogInOut}\n          {this.state.isLoggIn && <h2>test</h2> }          \n        </div>\n\n        <div>\n          <p></p>\n          <div>{accBtn}</div>\n          <p></p>\n          <div>{acc}</div>\n          <p></p>\n          <div>{acc}</div>\n          <p></p>\n          <div>{acc}</div>\n          <p></p>\n          <div>{acc}</div>\n        </div>\n      \n        <div className=\"App\">\n          <BrowserRouter>\n            <ul>\n              {/* カテゴリ名・IDはハードコート */}\n                <li><Link to=\"/\">HOME</Link></li>\n                <li><Link to=\"/all\">すべてのカテゴリ</Link></li>\n                <li><Link to=\"/dummy\">ダミー</Link></li>\n                <li><Link to=\"/category/1\">リダイレクト用</Link></li>\n                <li><Link to=\"/category/2502\">パソコン、周辺機器</Link></li>\n                <li><Link to=\"/category/10002\">本、雑誌、コミック</Link></li>\n            </ul>\n            <Switch>\n              <Route\n                key=\"home\"\n                exact path=\"/\"\n                component={Ranking}\n              />\n              <Route \n                key=\"all\"\n                exact path=\"/all\"\n                component={Ranking}\n              />\n              <Route \n                key=\"dummy\"\n                exact path=\"/dummy\"\n                component={RankingDummy}\n              />\n              \n              <Route\n                path=\"/category/1\"\n                render={() => <Redirect to=\"/all\" />}\n              />\n              <Route\n                path=\"/category/:id\"\n                render={\n                  ({ match }) => <Ranking categoryId={match.params.id} />\n                }\n              />\n              <Route\n                render={() => <Redirect to=\"/\" />}\n              />\n            </Switch>\n          </BrowserRouter>\n\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","export const noop = (state = {}) => state;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport './index.css';\nimport App from './App';\nimport createStore from './createStore';\n\n// create instance of history \nconst history = createBrowserHistory();\n\n// create Store\nconst store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Route path=\"/\" component={App} />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware\n} from 'redux';\nimport logger from 'redux-logger';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\n\nimport * as reducers from './reducers';\n\n// historyはsrc/index.jsから渡すようにする\nexport default function createStore(history) {\n  return reduxCreateStore(\n    combineReducers({\n      ...reducers,\n      router: connectRouter(history),  // connected-react-router をimportして (history)を入れる\n    }),\n    applyMiddleware(\n      logger,\n      routerMiddleware(history)\n    )\n  );\n}\n"],"sourceRoot":""}