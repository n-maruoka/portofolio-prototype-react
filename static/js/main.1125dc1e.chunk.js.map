{"version":3,"sources":["components/Ranking.js","components/Ranking-dummy.js","App.js","reducers/index.js","index.js","createStore.js"],"names":["Ranking","categoryId","defaultProps","RankingDummy","React","Component","App","props","state","count","this","setState","Fragment","onClick","handleClick","className","to","exact","path","component","render","match","params","id","noop","history","createBrowserHistory","store","reduxCreateStore","combineReducers","reducers","router","connectRouter","applyMiddleware","logger","routerMiddleware","ReactDOM","document","getElementById"],"mappings":"iVAIe,SAASA,EAAT,GAAkC,IAAfC,EAAc,EAAdA,WAEhC,OACE,gCACE,mFACA,mEAAaA,QAOnBD,EAAQE,aAAe,CAErBD,WAAY,K,ICJCE,E,uKATX,OACE,gCACE,mFACA,+E,GALmBC,IAAMC,WCmFlBC,G,wDAxEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,MAAO,GAFJ,E,0DAMjBC,KAAKC,SAAS,CAACF,MAAOC,KAAKF,MAAMC,MAAQ,M,+BAGjC,IAAD,OACP,OACE,eAAC,IAAMG,SAAP,WACE,gCACE,6BACGF,KAAKF,MAAMC,QAEd,wBAAQI,QAAS,WAAK,EAAKC,eAA3B,kBAIF,qBAAKC,UAAU,MAAf,SAEE,eAAC,IAAD,WACE,+BAEI,6BAAI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,OAAT,gEACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,SAAT,kCACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,cAAT,0DACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,iBAAT,sEACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,kBAAT,yEAGR,eAAC,IAAD,WACE,cAAC,IAAD,CAEEC,OAAK,EAACC,KAAK,IACXC,UAAWnB,GAFP,QAIN,cAAC,IAAD,CAEEiB,OAAK,EAACC,KAAK,OACXC,UAAWnB,GAFP,OAIN,cAAC,IAAD,CAEEiB,OAAK,EAACC,KAAK,SACXC,UAAWhB,GAFP,SAKN,cAAC,IAAD,CACEe,KAAK,cACLE,OAAQ,kBAAM,cAAC,IAAD,CAAUJ,GAAG,YAE7B,cAAC,IAAD,CACEE,KAAK,gBACLE,OACE,gBAAGC,EAAH,EAAGA,MAAH,OAAe,cAACrB,EAAD,CAASC,WAAYoB,EAAMC,OAAOC,QAGrD,cAAC,IAAD,CACEH,OAAQ,kBAAM,cAAC,IAAD,CAAUJ,GAAG,wB,GA9DzBX,c,yCCbLmB,EAAO,eAAChB,EAAD,uDAAS,GAAT,OAAgBA,GCWpC,ICAoCiB,EDA9BA,EAAUC,cAGVC,GCH8BF,EDGVA,ECFjBG,YACLC,YAAgB,2BACXC,GADU,IAEbC,OAAQC,YAAcP,MAExBQ,YACEC,IACAC,YAAiBV,MDHvBW,IAAShB,OACP,cAAC,IAAD,CAAUO,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAiBF,QAASA,EAA1B,SACE,cAAC,IAAD,CAAOP,KAAK,IAAIC,UAAWb,QAG/B+B,SAASC,eAAe,W","file":"static/js/main.1125dc1e.chunk.js","sourcesContent":["// src/components/Ranking.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Ranking({ categoryId }) {\n  // 最終的にはcategoryIdを元にAPIから情報を取得したい\n  return (\n    <div>\n      <h2>Rankingコンポーネント</h2>\n      <p>カテゴリーID: {categoryId}</p>\n    </div>\n  )\n}\nRanking.propTypes = {\n  categoryId: PropTypes.string\n};\nRanking.defaultProps = {\n  // categoryId=1は総合ランキング\n  categoryId: '1'\n};\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nclass RankingDummy extends React.Component{\n  render() {\n    return (\n      <div>\n        <h2>Rankingコンポーネント</h2>\n        <p>カテゴリーID: dummy</p>\n      </div>\n    )\n  };\n}\n\nexport default RankingDummy;\n","import React, {Component} from 'react';\nimport { BrowserRouter, Route, Link, Switch, Redirect } from 'react-router-dom';\nimport Ranking from './components/Ranking';\nimport RankingDummy from './components/Ranking-dummy';\nimport './App.css';\n\n\n// class NotFound extends Component {\n//   render() {\n//     return <h2>コンテンツなし</h2>;\n//   }\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {count: 0};\n  }\n  \n  handleClick(){\n    this.setState({count: this.state.count + 1});\n  }\n  \n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <h1>\n            {this.state.count}\n          </h1>\n          <button onClick={()=>{this.handleClick()}}>+</button>\n        </div>\n\n      \n        <div className=\"App\">\n\n          <BrowserRouter>\n            <ul>\n              {/* カテゴリ名・IDはハードコート */}\n                <li><Link to=\"/\">HOME</Link></li>\n                <li><Link to=\"/all\">すべてのカテゴリ</Link></li>\n                <li><Link to=\"/dummy\">ダミー</Link></li>\n                <li><Link to=\"/category/1\">リダイレクト用</Link></li>\n                <li><Link to=\"/category/2502\">パソコン、周辺機器</Link></li>\n                <li><Link to=\"/category/10002\">本、雑誌、コミック</Link></li>\n            </ul>\n\n            <Switch>\n              <Route\n                key=\"home\"\n                exact path=\"/\"\n                component={Ranking}\n              />\n              <Route \n                key=\"all\"\n                exact path=\"/all\"\n                component={Ranking}\n              />\n              <Route \n                key=\"dummy\"\n                exact path=\"/dummy\"\n                component={RankingDummy}\n              />\n              \n              <Route\n                path=\"/category/1\"\n                render={() => <Redirect to=\"/all\" />}\n              />\n              <Route\n                path=\"/category/:id\"\n                render={\n                  ({ match }) => <Ranking categoryId={match.params.id} />\n                }\n              />\n              <Route\n                render={() => <Redirect to=\"/\" />}\n              />\n            </Switch>\n          </BrowserRouter>\n\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","export const noop = (state = {}) => state;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport './index.css';\nimport App from './App';\nimport createStore from './createStore';\n\n// create instance of history \nconst history = createBrowserHistory();\n\n// create Store\nconst store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Route path=\"/\" component={App} />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware\n} from 'redux';\nimport logger from 'redux-logger';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\n\nimport * as reducers from './reducers';\n\n// historyはsrc/index.jsから渡すようにする\nexport default function createStore(history) {\n  return reduxCreateStore(\n    combineReducers({\n      ...reducers,\n      router: connectRouter(history),  // connected-react-router をimportして (history)を入れる\n    }),\n    applyMiddleware(\n      logger,\n      routerMiddleware(history)\n    )\n  );\n}\n"],"sourceRoot":""}